/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleAccount,
  SimpleAccountInterface,
} from "../../contracts/SimpleAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "StringsInsufficientHexLength",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accountData",
    outputs: [
      {
        internalType: "bytes32",
        name: "accountId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "authProviderId",
        type: "bytes32",
      },
      {
        internalType: "contract PublicKeyRegistry",
        name: "publicKeyRegistry",
        type: "address",
      },
      {
        internalType: "contract UltraVerifier",
        name: "proofVerifier",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct SimpleAccount.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "accountId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "authProviderId",
            type: "bytes32",
          },
          {
            internalType: "contract PublicKeyRegistry",
            name: "publicKeyRegistry",
            type: "address",
          },
          {
            internalType: "contract UltraVerifier",
            name: "proofVerifier",
            type: "address",
          },
        ],
        internalType: "struct ZkLogin.AccountData",
        name: "accountData_",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerInfo",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "expirationTimestamp",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "jwtIat",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "jwtNonce",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "publicKeyHash",
            type: "bytes32",
          },
        ],
        internalType: "struct ZkLogin.VerificationData",
        name: "verificationData",
        type: "tuple",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523060805234801561001457600080fd5b50604051612af6380380612af683398101604081905261003391610100565b6001600160a01b03811660a05261004861004e565b50610130565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561009e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100fd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b60006020828403121561011257600080fd5b81516001600160a01b038116811461012957600080fd5b9392505050565b60805160a05161296961018d60003960008181610425015281816107f3015281816108a101528181610df201528181610eb001528181610ef701526110ce0152600081816112cd015281816112f6015261151201526129696000f3fe6080604052600436106101635760003560e01c8063ad3cb1cc116100c0578063b6f360fb11610074578063c399ec8811610059578063c399ec8814610527578063d087d2881461053c578063f23a6e611461055157600080fd5b8063b6f360fb146104bf578063bc197c81146104df57600080fd5b8063b2e684be116100a5578063b2e684be1461046a578063b387ef921461048a578063b61d27f61461049f57600080fd5b8063ad3cb1cc146103c0578063b0d691fe1461041657600080fd5b80634bd834c7116101175780634f1ef286116100fc5780634f1ef2861461032057806352d1902d146103335780637a28f8bc1461034857600080fd5b80634bd834c7146102725780634d44560d1461030057600080fd5b806319822f7c1161014857806319822f7c1461021a57806334fcd5be146102485780634a58db191461026a57600080fd5b806301ffc9a71461016f578063150b7a02146101a457600080fd5b3661016a57005b600080fd5b34801561017b57600080fd5b5061018f61018a366004611ef4565b610597565b60405190151581526020015b60405180910390f35b3480156101b057600080fd5b506101e96101bf366004611fa1565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161019b565b34801561022657600080fd5b5061023a610235366004612014565b61067c565b60405190815260200161019b565b34801561025457600080fd5b506102686102633660046120ad565b610708565b005b6102686107f1565b34801561027e57600080fd5b506000546102c79073ffffffffffffffffffffffffffffffffffffffff8116907401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526bffffffffffffffffffffffff90911660208301520161019b565b34801561030c57600080fd5b5061026861031b3660046120ef565b610897565b61026861032e3660046121f7565b61094e565b34801561033f57600080fd5b5061023a61096d565b34801561035457600080fd5b5060015460025460035460045461038493929173ffffffffffffffffffffffffffffffffffffffff908116911684565b60408051948552602085019390935273ffffffffffffffffffffffffffffffffffffffff9182169284019290925216606082015260800161019b565b3480156103cc57600080fd5b506104096040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161019b91906122b5565b34801561042257600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019b565b34801561047657600080fd5b506102686104853660046122e0565b61099c565b34801561049657600080fd5b50610445610b6c565b3480156104ab57600080fd5b506102686104ba366004612315565b610bd8565b3480156104cb57600080fd5b506102686104da366004612371565b610c27565b3480156104eb57600080fd5b506101e96104fa36600461238d565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561053357600080fd5b5061023a610dac565b34801561054857600080fd5b5061023a610e63565b34801561055d57600080fd5b506101e961056c366004612458565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061062a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061067657507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60007fb2e684be000000000000000000000000000000000000000000000000000000006106ac60608601866124d4565b6106b591612539565b7fffffffff0000000000000000000000000000000000000000000000000000000016036106e457506000610701565b6106ec610edf565b6106f68484610f80565b90506107018261104b565b9392505050565b6107106110b6565b60005b818110156107ec576107e48383838181106107305761073061259f565b905060200281019061074291906125ce565b61075090602081019061260c565b8484848181106107625761076261259f565b905060200281019061077491906125ce565b6020013585858581811061078a5761078a61259f565b905060200281019061079c91906125ce565b6107aa9060408101906124d4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061119292505050565b600101610713565b505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024016000604051808303818588803b15801561087c57600080fd5b505af1158015610890573d6000803e3d6000fd5b5050505050565b61089f61120f565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561093257600080fd5b505af1158015610946573d6000803e3d6000fd5b505050505050565b6109566112b5565b61095f826113b9565b61096982826113c1565b5050565b60006109776114fa565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b426109ad610e106020840135612658565b1015610a1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4a77744163636f756e743a20657870697265642070726f6f660000000000000060448201526064015b60405180910390fd5b604080516080810182526001548152600254602082015260035473ffffffffffffffffffffffffffffffffffffffff908116928201929092526004549091166060820152600090610a7390610a6e8461266b565b611569565b905080610adc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4a77744163636f756e743a20696e76616c69642070726f6f66000000000000006044820152606401610a11565b6040518060400160405280836040013560001c73ffffffffffffffffffffffffffffffffffffffff1681526020016201518042610b1991906126ee565b6bffffffffffffffffffffffff908116909152815160209092015116740100000000000000000000000000000000000000000273ffffffffffffffffffffffffffffffffffffffff909116176000555050565b604080518082019091526000805473ffffffffffffffffffffffffffffffffffffffff811683527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1660208301819052909190421115610bd257600091505090565b51919050565b610be06110b6565b610c21848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061119292505050565b50505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610c725750825b905060008267ffffffffffffffff166001148015610c8f5750303b155b905081158015610c9d575080155b15610cd4576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610d355784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b856001610d428282612712565b505083156109465784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610e3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5e91906127c6565b905090565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610e1d565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610f7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610a11565b565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c8120610ffb81610fc16101008701876124d4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061185592505050565b73ffffffffffffffffffffffffffffffffffffffff16611019610b6c565b73ffffffffffffffffffffffffffffffffffffffff161461103e576001915050610676565b5060009392505050565b50565b80156110485760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d8060008114610890576040519150601f19603f3d011682016040523d82523d6000602084013e610890565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061112c57506110fd610b6c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610f7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152606401610a11565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516111bb91906127df565b60006040518083038185875af1925050503d80600081146111f8576040519150601f19603f3d011682016040523d82523d6000602084013e6111fd565b606091505b50915091508161089057805160208201fd5b611217610b6c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061124f57503330145b610f7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606401610a11565b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061138257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113697f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610f7e576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61104861120f565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611446575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611443918101906127c6565b60015b611494576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610a11565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146114f0576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610a11565b6107ec838361187f565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610f7e576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000826040015173ffffffffffffffffffffffffffffffffffffffff16635879142a846020015184606001516040518363ffffffff1660e01b81526004016115bb929190918252602082015260400190565b602060405180830381865afa1580156115d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fc91906127f1565b611662576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f7075626c6963206b65792068617368206d69736d6174636800000000000000006044820152606401610a11565b600061167183604001516118e2565b80519091506003906000906116869083612658565b67ffffffffffffffff81111561169e5761169e61211b565b6040519080825280602002602001820160405280156116c7578160200160208202803683370190505b50865190915060009082826116db81612813565b9350815181106116ed576116ed61259f565b602002602001018181525050856020015160001b82828061170d90612813565b93508151811061171f5761171f61259f565b60209081029190910101526060860151828261173a81612813565b93508151811061174c5761174c61259f565b60200260200101818152505060005b84518110156117ae578481815181106117765761177661259f565b016020015160f81c838361178981612813565b94508151811061179b5761179b61259f565b602090810291909101015260010161175b565b50606087015186516040517fea50d0e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ea50d0e49161180991869060040161284b565b602060405180830381865afa158015611826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184a91906127f1565b979650505050505050565b60008060008061186586866118ef565b925092509250611875828261193c565b5090949350505050565b61188882611a40565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156118da576107ec8282611b0f565b610969611b92565b6060610676826020611bca565b600080600083516041036119295760208401516040850151606086015160001a61191b88828585611d29565b955095509550505050611935565b50508151600091506002905b9250925092565b6000826003811115611950576119506128a5565b03611959575050565b600182600381111561196d5761196d6128a5565b036119a4576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028260038111156119b8576119b86128a5565b036119f2576040517ffce698f700000000000000000000000000000000000000000000000000000000815260048101829052602401610a11565b6003826003811115611a0657611a066128a5565b03610969576040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260048101829052602401610a11565b8073ffffffffffffffffffffffffffffffffffffffff163b600003611aa9576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610a11565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611b3991906127df565b600060405180830381855af49150503d8060008114611b74576040519150601f19603f3d011682016040523d82523d6000602084013e611b79565b606091505b5091509150611b89858383611e23565b95945050505050565b3415610f7e576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826000611bda8460026128d4565b67ffffffffffffffff811115611bf257611bf261211b565b6040519080825280601f01601f191660200182016040528015611c1c576020820181803683370190505b5090506000611c2c8560026128d4565b611c37906001612658565b90505b6001811115611cde577f303132333435363738396162636465660000000000000000000000000000000083600f1660108110611c7857611c7861259f565b1a60f81b82611c886002846128eb565b81518110611c9857611c9861259f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049290921c91611cd7816128fe565b9050611c3a565b508115611d21576040517fe22e27eb0000000000000000000000000000000000000000000000000000000081526004810186905260248101859052604401610a11565b949350505050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611d645750600091506003905082611e19565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611db8573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611e0f57506000925060019150829050611e19565b9250600091508190505b9450945094915050565b606082611e3857611e3382611eb2565b610701565b8151158015611e5c575073ffffffffffffffffffffffffffffffffffffffff84163b155b15611eab576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610a11565b5080610701565b805115611ec25780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060208284031215611f0657600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461070157600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461104857600080fd5b60008083601f840112611f6a57600080fd5b50813567ffffffffffffffff811115611f8257600080fd5b602083019150836020828501011115611f9a57600080fd5b9250929050565b600080600080600060808688031215611fb957600080fd5b8535611fc481611f36565b94506020860135611fd481611f36565b935060408601359250606086013567ffffffffffffffff811115611ff757600080fd5b61200388828901611f58565b969995985093965092949392505050565b60008060006060848603121561202957600080fd5b833567ffffffffffffffff81111561204057600080fd5b8401610120818703121561205357600080fd5b95602085013595506040909401359392505050565b60008083601f84011261207a57600080fd5b50813567ffffffffffffffff81111561209257600080fd5b6020830191508360208260051b8501011115611f9a57600080fd5b600080602083850312156120c057600080fd5b823567ffffffffffffffff8111156120d757600080fd5b6120e385828601612068565b90969095509350505050565b6000806040838503121561210257600080fd5b823561210d81611f36565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261215b57600080fd5b813567ffffffffffffffff8111156121755761217561211b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff811182821017156121c2576121c261211b565b6040528181528382016020018510156121da57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561220a57600080fd5b823561221581611f36565b9150602083013567ffffffffffffffff81111561223157600080fd5b61223d8582860161214a565b9150509250929050565b60005b8381101561226257818101518382015260200161224a565b50506000910152565b60008151808452612283816020860160208601612247565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610701602083018461226b565b6000608082840312156122da57600080fd5b50919050565b6000602082840312156122f257600080fd5b813567ffffffffffffffff81111561230957600080fd5b611d21848285016122c8565b6000806000806060858703121561232b57600080fd5b843561233681611f36565b935060208501359250604085013567ffffffffffffffff81111561235957600080fd5b61236587828801611f58565b95989497509550505050565b60006080828403121561238357600080fd5b61070183836122c8565b60008060008060008060008060a0898b0312156123a957600080fd5b88356123b481611f36565b975060208901356123c481611f36565b9650604089013567ffffffffffffffff8111156123e057600080fd5b6123ec8b828c01612068565b909750955050606089013567ffffffffffffffff81111561240c57600080fd5b6124188b828c01612068565b909550935050608089013567ffffffffffffffff81111561243857600080fd5b6124448b828c01611f58565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561247157600080fd5b863561247c81611f36565b9550602087013561248c81611f36565b94506040870135935060608701359250608087013567ffffffffffffffff8111156124b657600080fd5b6124c289828a01611f58565b979a9699509497509295939492505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261250957600080fd5b83018035915067ffffffffffffffff82111561252457600080fd5b602001915036819003821315611f9a57600080fd5b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015612598577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261260257600080fd5b9190910192915050565b60006020828403121561261e57600080fd5b813561070181611f36565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561067657610676612629565b60006080823603121561267d57600080fd5b6040516080810167ffffffffffffffff811182821017156126a0576126a061211b565b604052823567ffffffffffffffff8111156126ba57600080fd5b6126c63682860161214a565b8252506020838101359082015260408084013590820152606092830135928101929092525090565b6bffffffffffffffffffffffff818116838216019081111561067657610676612629565b8135815560208201356001820155604082013561272e81611f36565b6002820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905550606082013561277f81611f36565b6003820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316179055505050565b6000602082840312156127d857600080fd5b5051919050565b60008251612602818460208701612247565b60006020828403121561280357600080fd5b8151801515811461070157600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361284457612844612629565b5060010190565b60408152600061285e604083018561226b565b828103602084015280845180835260208301915060208601925060005b8181101561289957835183526020938401939092019160010161287b565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b808202811582820484141761067657610676612629565b8181038181111561067657610676612629565b60008161290d5761290d612629565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220a9e73df766239b200977522e7f5d68ef09c938648e73cf00a13a1628e392327964736f6c634300081b0033";

type SimpleAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleAccount__factory extends ContractFactory {
  constructor(...args: SimpleAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    anEntryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override deploy(
    anEntryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(anEntryPoint, overrides || {}) as Promise<
      SimpleAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleAccount__factory {
    return super.connect(runner) as SimpleAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleAccountInterface {
    return new Interface(_abi) as SimpleAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleAccount {
    return new Contract(address, _abi, runner) as unknown as SimpleAccount;
  }
}
