/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EoaAccount,
  EoaAccountInterface,
} from "../../contracts/EoaAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "StringsInsufficientHexLength",
    type: "error",
  },
  {
    inputs: [],
    name: "accountData",
    outputs: [
      {
        internalType: "bytes32",
        name: "accountId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "authProviderId",
        type: "bytes32",
      },
      {
        internalType: "contract PublicKeyRegistry",
        name: "publicKeyRegistry",
        type: "address",
      },
      {
        internalType: "contract UltraVerifier",
        name: "proofVerifier",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "r",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "s",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.Signature",
        name: "signature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "authenticatorData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "clientDataJSON",
            type: "string",
          },
          {
            internalType: "uint16",
            name: "challengeIndex",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "typeIndex",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "userVerificationRequired",
            type: "bool",
          },
        ],
        internalType: "struct WebAuthnP256.Metadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getWebAuthnPublicKey",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "jwtIat",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "jwtNonce",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "publicKeyHash",
            type: "bytes32",
          },
        ],
        internalType: "struct ZkLogin.VerificationData",
        name: "verificationData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "newP256PublicKey",
        type: "tuple",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "webauthnPublicKey_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "accountId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "authProviderId",
            type: "bytes32",
          },
          {
            internalType: "contract PublicKeyRegistry",
            name: "publicKeyRegistry",
            type: "address",
          },
          {
            internalType: "contract UltraVerifier",
            name: "proofVerifier",
            type: "address",
          },
        ],
        internalType: "struct ZkLogin.AccountData",
        name: "accountData_",
        type: "tuple",
      },
    ],
    name: "setAccountId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "webauthnPublicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506118978061001f6000396000f3fe6080604052600436106100745760003560e01c8063affed0e01161004e578063affed0e01461014f578063bb3da92d14610173578063c389ca27146101be578063ff07203e146101de57600080fd5b8063041c9ae6146100805780637a28f8bc146100a25780637dc0872e1461011f57600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b36600461106b565b6101fe565b005b3480156100ae57600080fd5b506000546001546002546003546100de93929173ffffffffffffffffffffffffffffffffffffffff908116911684565b60408051948552602085019390935273ffffffffffffffffffffffffffffffffffffffff918216928401929092521660608201526080015b60405180910390f35b34801561012b57600080fd5b5060055460065461013a919082565b60408051928352602083019190915201610116565b34801561015b57600080fd5b5061016560045481565b604051908152602001610116565b34801561017f57600080fd5b50604080518082018252600080825260209182015281518083018352600554808252600654918301918252835190815290519181019190915201610116565b3480156101ca57600080fd5b506100a06101d93660046110f6565b610369565b3480156101ea57600080fd5b506100a06101f936600461123e565b6104d1565b604080518235602080830191909152830135818301529083013590606001604051602081830303815290604052805190602001201461029e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f696e76616c696420576562417574686e207075626c6963206b6579000000000060448201526064015b60405180910390fd5b604080516080810182526000548152600154602082015260025473ffffffffffffffffffffffffffffffffffffffff9081169282019290925260035490911660608201526102f4906102ef84611391565b6105b1565b61035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610295565b80356005556020013560065550565b600480546000918261037a83611425565b919050558787878760405160200161039695949392919061145d565b6040516020818303038152906040528051906020012090506103e781836103bc90611508565b6103cb368790038701876115c1565b604080518082019091526005548152600654602082015261089f565b6103f057600080fd5b60008773ffffffffffffffffffffffffffffffffffffffff1685888860405161041a929190611612565b60006040518083038185875af1925050503d8060008114610457576040519150601f19603f3d011682016040523d82523d6000602084013e61045c565b606091505b50509050806104c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f63616c6c206661696c65640000000000000000000000000000000000000000006044820152606401610295565b5050505050505050565b33301461053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6e6f742073656c660000000000000000000000000000000000000000000000006044820152606401610295565b81356005556020918201356006558051600055908101516001556040810151600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617909155606090920151600380549093169116179055565b6000826040015173ffffffffffffffffffffffffffffffffffffffff16635879142a846020015184606001516040518363ffffffff1660e01b8152600401610603929190918252602082015260400190565b602060405180830381865afa158015610620573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106449190611622565b6106aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f7075626c6963206b65792068617368206d69736d6174636800000000000000006044820152606401610295565b60006106b98360400151610ad1565b80519091506003906000906106ce908361163f565b67ffffffffffffffff8111156106e6576106e66111c3565b60405190808252806020026020018201604052801561070f578160200160208202803683370190505b508651909150600090828261072381611425565b93508151811061073557610735611652565b602002602001018181525050856020015160001b82828061075590611425565b93508151811061076757610767611652565b60209081029190910101526060860151828261078281611425565b93508151811061079457610794611652565b60200260200101818152505060005b84518110156107f6578481815181106107be576107be611652565b016020015160f81c83836107d181611425565b9450815181106107e3576107e3611652565b60209081029190910101526001016107a3565b50606087015186516040517fea50d0e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ea50d0e4916108519186906004016116a5565b602060405180830381865afa15801561086e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108929190611622565b9450505050505b92915050565b6000602584600001515110806108e157506108df84600001516020815181106108ca576108ca611652565b602001015160f81c60f81b8560800151610ade565b155b156108ee57506000610ac9565b60006040518060400160405280601581526020017f2274797065223a22776562617574686e2e676574220000000000000000000000815250905061093f818660200151876060015161ffff16610bd0565b61094d576000915050610ac9565b600061097c8760405160200161096591815260200190565b604051602081830303815290604052600180610cb1565b9050600081604051602001610991919061173f565b60405160208183030381529060405290506109b9818860200151896040015161ffff16610bd0565b6109c95760009350505050610ac9565b6000600288602001516040516109df91906117ab565b602060405180830381855afa1580156109fc573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610a1f91906117c7565b905060006002896000015183604051602001610a3c9291906117e0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a74916117ab565b602060405180830381855afa158015610a91573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610ab491906117c7565b9050610ac1818989610dc2565b955050505050505b949350505050565b6060610899826020610efc565b60007f010000000000000000000000000000000000000000000000000000000000000083811614610b1157506000610899565b818015610b4057507f040000000000000000000000000000000000000000000000000000000000000083811614155b15610b4d57506000610899565b7f080000000000000000000000000000000000000000000000000000000000000083811614610bc7577ff0000000000000000000000000000000000000000000000000000000000000007f1000000000000000000000000000000000000000000000000000000000000000841601610bc757506000610899565b50600192915050565b825182516000918591859190845b82811015610ca05781610bf1828961163f565b10610c0457600095505050505050610caa565b83610c0f828961163f565b81518110610c1f57610c1f611652565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916858281518110610c5e57610c5e611652565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614610c9857600095505050505050610caa565b600101610bde565b5060019450505050505b9392505050565b606083518015610dba576003600282010460021b60405192507f4142434445464748494a4b4c4d4e4f505152535455565758595a616263646566601f526106708515027f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f18603f52602083018181018388602001018051600082525b60038a0199508951603f8160121c1651600053603f81600c1c1651600153603f8160061c1651600253603f811651600353506000518452600484019350828410610d2d5790526020016040527f3d3d000000000000000000000000000000000000000000000000000000000000600384066002048083039190915260008615159091029182900352900382525b509392505050565b8151602080840151835184830151604080519485018990528401949094526060830191909152608082015260a08101919091526000908190819060149060c001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610e3a916117ab565b600060405180830381855afa9150503d8060008114610e75576040519150601f19603f3d011682016040523d82523d6000602084013e610e7a565b606091505b5091509150818015610e8d575080516020145b8015610ef2575080601f81518110610ea757610ea7611652565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f0100000000000000000000000000000000000000000000000000000000000000145b9695505050505050565b6060826000610f0c846002611802565b67ffffffffffffffff811115610f2457610f246111c3565b6040519080825280601f01601f191660200182016040528015610f4e576020820181803683370190505b5090506000610f5e856002611802565b610f6990600161163f565b90505b6001811115611010577f303132333435363738396162636465660000000000000000000000000000000083600f1660108110610faa57610faa611652565b1a60f81b82610fba600284611819565b81518110610fca57610fca611652565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049290921c916110098161182c565b9050610f6c565b508115610ac9576040517fe22e27eb0000000000000000000000000000000000000000000000000000000081526004810186905260248101859052604401610295565b60006040828403121561106557600080fd5b50919050565b6000806060838503121561107e57600080fd5b823567ffffffffffffffff81111561109557600080fd5b8301608081860312156110a757600080fd5b91506110b68460208501611053565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146110e157600080fd5b50565b600060a0828403121561106557600080fd5b60008060008060008060c0878903121561110f57600080fd5b863561111a816110bf565b9550602087013567ffffffffffffffff81111561113657600080fd5b8701601f8101891361114757600080fd5b803567ffffffffffffffff81111561115e57600080fd5b89602082840101111561117057600080fd5b602091909101955093506040870135925061118e8860608901611053565b915060a087013567ffffffffffffffff8111156111aa57600080fd5b6111b689828a016110e4565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611215576112156111c3565b60405290565b60405160a0810167ffffffffffffffff81118282101715611215576112156111c3565b60008082840360c081121561125257600080fd5b61125c8585611053565b925060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08201121561128e57600080fd5b506112976111f2565b604084013581526060840135602082015260808401356112b6816110bf565b604082015260a08401356112c9816110bf565b6060820152919491935090915050565b60008067ffffffffffffffff8411156112f4576112f46111c3565b506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85018116603f0116810181811067ffffffffffffffff82111715611341576113416111c3565b60405283815290508082840185101561135957600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261138257600080fd5b610caa838335602085016112d9565b6000608082360312156113a357600080fd5b6113ab6111f2565b823567ffffffffffffffff8111156113c257600080fd5b6113ce36828601611371565b8252506020838101359082015260408084013590820152606092830135928101929092525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611456576114566113f6565b5060010190565b85815273ffffffffffffffffffffffffffffffffffffffff8516602082015260806040820152826080820152828460a0830137600060a08483010152600060a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011683010190508260608301529695505050505050565b803561ffff811681146114ea57600080fd5b919050565b80151581146110e157600080fd5b80356114ea816114ef565b600060a0823603121561151a57600080fd5b61152261121b565b823567ffffffffffffffff81111561153957600080fd5b61154536828601611371565b825250602083013567ffffffffffffffff81111561156257600080fd5b830136601f82011261157357600080fd5b611582368235602084016112d9565b602083015250611594604084016114d8565b60408201526115a5606084016114d8565b60608201526115b6608084016114fd565b608082015292915050565b600060408284031280156115d457600080fd5b506040805190810167ffffffffffffffff811182821017156115f8576115f86111c3565b604052823581526020928301359281019290925250919050565b8183823760009101908152919050565b60006020828403121561163457600080fd5b8151610caa816114ef565b80820180821115610899576108996113f6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b8381101561169c578181015183820152602001611684565b50506000910152565b60408152600083518060408401526116c4816060850160208801611681565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201828103606090810160208086019190915285519183018290528501916000916080909101905b808310156117345783518252602082019150602084019350600183019250611711565b509695505050505050565b7f226368616c6c656e6765223a220000000000000000000000000000000000000081526000825161177781600d850160208701611681565b7f2200000000000000000000000000000000000000000000000000000000000000600d939091019283015250600e01919050565b600082516117bd818460208701611681565b9190910192915050565b6000602082840312156117d957600080fd5b5051919050565b600083516117f2818460208801611681565b9190910191825250602001919050565b8082028115828204841417610899576108996113f6565b81810381811115610899576108996113f6565b60008161183b5761183b6113f6565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea264697066735822122010b61e0554d32b417f97f0a8c94b705031ef9c1418f657c84ae1dc8d468c540864736f6c634300081b0033";

type EoaAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EoaAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EoaAccount__factory extends ContractFactory {
  constructor(...args: EoaAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EoaAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EoaAccount__factory {
    return super.connect(runner) as EoaAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EoaAccountInterface {
    return new Interface(_abi) as EoaAccountInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EoaAccount {
    return new Contract(address, _abi, runner) as unknown as EoaAccount;
  }
}
