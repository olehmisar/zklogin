/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleAccount,
  SimpleAccountInterface,
} from "../../contracts/SimpleAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "proofVerifier_",
        type: "address",
      },
      {
        internalType: "contract PublicKeyRegistry",
        name: "publicKeyRegistry_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "StringsInsufficientHexLength",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accountId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "authProviderId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct SimpleAccount.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "accountId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "jwtAud",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "authProviderId",
            type: "bytes32",
          },
        ],
        internalType: "struct SimpleAccount.InitializeParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "jwtAud",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerInfo",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "expirationTimestamp",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofVerifier",
    outputs: [
      {
        internalType: "contract UltraVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicKeyRegistry",
    outputs: [
      {
        internalType: "contract PublicKeyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "jwtIat",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "jwtNonce",
            type: "address",
          },
          {
            internalType: "uint256[18]",
            name: "publicKeyLimbs",
            type: "uint256[18]",
          },
          {
            internalType: "uint256[18]",
            name: "publicKeyRedcLimbs",
            type: "uint256[18]",
          },
        ],
        internalType: "struct JwtVerifier.VerificationData",
        name: "verificationData",
        type: "tuple",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040523060805234801561001557600080fd5b506040516130ad3803806130ad83398101604081905261003491610124565b6001600160a01b0380831660a05280821660c052831660e05261005561005d565b505050610171565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100ad5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161461010c5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b038116811461010c57600080fd5b60008060006060848603121561013957600080fd5b83516101448161010f565b60208501519093506101558161010f565b60408501519092506101668161010f565b809150509250925092565b60805160a05160c05160e051612ebd6101f0600039600081816104e7015281816108540152818161090201528181610ee501528181610fa301528181610fea01526111c101526000818161041701526116f20152600081816103be0152611af90152600081816113c0015281816113e901526116050152612ebd6000f3fe60806040526004361061018f5760003560e01c806386aeebf7116100d6578063b387ef921161007f578063c399ec8811610059578063c399ec8814610588578063d087d2881461059d578063f23a6e61146105b257600080fd5b8063b387ef921461050b578063b61d27f614610520578063bc197c811461054057600080fd5b80639cfd7cff116100b05780639cfd7cff14610479578063ad3cb1cc1461048f578063b0d691fe146104d857600080fd5b806386aeebf7146104055780638dcfb91914610439578063906cc5301461045957600080fd5b80634d44560d116101385780635ad662d4116101125780635ad662d4146103745780636b124f5b146103965780637fa417b3146103ac57600080fd5b80634d44560d1461032c5780634f1ef2861461034c57806352d1902d1461035f57600080fd5b806334fcd5be1161016957806334fcd5be146102745780634a58db19146102965780634bd834c71461029e57600080fd5b806301ffc9a71461019b578063150b7a02146101d057806319822f7c1461024657600080fd5b3661019657005b600080fd5b3480156101a757600080fd5b506101bb6101b6366004612262565b6105f8565b60405190151581526020015b60405180910390f35b3480156101dc57600080fd5b506102156101eb36600461230f565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101c7565b34801561025257600080fd5b50610266610261366004612382565b6106dd565b6040519081526020016101c7565b34801561028057600080fd5b5061029461028f36600461241b565b610769565b005b610294610852565b3480156102aa57600080fd5b506003546102f39073ffffffffffffffffffffffffffffffffffffffff8116907401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526bffffffffffffffffffffffff9091166020830152016101c7565b34801561033857600080fd5b5061029461034736600461245d565b6108f8565b61029461035a366004612565565b6109af565b34801561036b57600080fd5b506102666109ce565b34801561038057600080fd5b506103896109fd565b6040516101c79190612623565b3480156103a257600080fd5b5061026660025481565b3480156103b857600080fd5b506103e07f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c7565b34801561041157600080fd5b506103e07f000000000000000000000000000000000000000000000000000000000000000081565b34801561044557600080fd5b50610294610454366004612636565b610a8b565b34801561046557600080fd5b50610294610474366004612671565b610c51565b34801561048557600080fd5b5061026660005481565b34801561049b57600080fd5b506103896040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b3480156104e457600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103e0565b34801561051757600080fd5b506103e0610de4565b34801561052c57600080fd5b5061029461053b3660046126ad565b610e50565b34801561054c57600080fd5b5061021561055b366004612709565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561059457600080fd5b50610266610e9f565b3480156105a957600080fd5b50610266610f56565b3480156105be57600080fd5b506102156105cd3660046127d4565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061068b57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806106d757507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60007f906cc5300000000000000000000000000000000000000000000000000000000061070d6060860186612850565b610716916128b5565b7fffffffff00000000000000000000000000000000000000000000000000000000160361074557506000610762565b61074d610fd2565b6107578484611073565b90506107628261113e565b9392505050565b6107716111a9565b60005b8181101561084d576108458383838181106107915761079161291b565b90506020028101906107a3919061294a565b6107b1906020810190612988565b8484848181106107c3576107c361291b565b90506020028101906107d5919061294a565b602001358585858181106107eb576107eb61291b565b90506020028101906107fd919061294a565b61080b906040810190612850565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061128592505050565b600101610774565b505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024016000604051808303818588803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b5050505050565b610900611302565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561099357600080fd5b505af11580156109a7573d6000803e3d6000fd5b505050505050565b6109b76113a8565b6109c0826114ac565b6109ca82826114b4565b5050565b60006109d86115ed565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b60018054610a0a906129a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610a36906129a5565b8015610a835780601f10610a5857610100808354040283529160200191610a83565b820191906000526020600020905b815481529060010190602001808311610a6657829003601f168201915b505050505081565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610ad65750825b905060008267ffffffffffffffff166001148015610af35750303b155b905081158015610b01575080155b15610b38576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610b995784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610be98635610bab6020890189612850565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505050604089013561165c565b83156109a75784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b42610c62610e106020840135612a27565b1015610ccf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4a77744163636f756e743a20657870697265642070726f6f660000000000000060448201526064015b60405180910390fd5b6000610ce2610cdd83612aaa565b6116ee565b905080610d4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4a77744163636f756e743a20696e76616c69642070726f6f66000000000000006044820152606401610cc6565b6040518060400160405280836040016020810190610d699190612988565b73ffffffffffffffffffffffffffffffffffffffff168152602001610d916201518042612b51565b6bffffffffffffffffffffffff908116909152815160209092015116740100000000000000000000000000000000000000000273ffffffffffffffffffffffffffffffffffffffff909116176003555050565b6040805180820190915260035473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff166020820181905260009190421115610e4a57600091505090565b51919050565b610e586111a9565b610e99848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061128592505050565b50505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f519190612b75565b905090565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610f10565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611071576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610cc6565b565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c81206110ee816110b4610100870187612850565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b7a92505050565b73ffffffffffffffffffffffffffffffffffffffff1661110c610de4565b73ffffffffffffffffffffffffffffffffffffffff16146111315760019150506106d7565b5060009392505050565b50565b801561113b5760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d80600081146108f1576040519150601f19603f3d011682016040523d82523d6000602084013e6108f1565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061121f57506111f0610de4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611071576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152606401610cc6565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516112ae9190612b8e565b60006040518083038185875af1925050503d80600081146112eb576040519150601f19603f3d011682016040523d82523d6000602084013e6112f0565b606091505b5091509150816108f157805160208201fd5b61130a610de4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061134257503330145b611071576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606401610cc6565b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061147557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661145c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611071576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61113b611302565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611539575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261153691810190612b75565b60015b611587576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610cc6565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146115e3576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610cc6565b61084d8383611ba4565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611071576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000839055600161166d8382612be7565b506101006001805461167e906129a5565b9050146116e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6a77742e617564206c656e677468206d69736d617463680000000000000000006044820152606401610cc6565b6002555050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635879142a60025461174185606001518660800151611c07565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401602060405180830381865afa15801561179a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117be9190612d00565b611824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f7075626c6963206b65792068617368206d69736d6174636800000000000000006044820152606401610cc6565b60006118338360400151611c3a565b8051909150600290600090601290819061184f61010086612a27565b6118599190612a27565b6118639190612a27565b61186d9190612a27565b67ffffffffffffffff81111561188557611885612489565b6040519080825280602002602001820160405280156118ae578160200160208202803683370190505b509050600080548282806118c190612d22565b9350815181106118d3576118d361291b565b602002602001018181525050856020015160001b8282806118f390612d22565b9350815181106119055761190561291b565b60200260200101818152505060005b6101008110156119b257600181815461192c906129a5565b811061193a5761193a61291b565b8154600116156119595790600052602060002090602091828204019190065b90547f0100000000000000000000000000000000000000000000000000000000000000911a0260f81c838361198d81612d22565b94508151811061199f5761199f61291b565b6020908102919091010152600101611914565b5060005b8451811015611a09578481815181106119d1576119d161291b565b016020015160f81c83836119e481612d22565b9450815181106119f6576119f661291b565b60209081029190910101526001016119b6565b5060005b6012811015611a615786606001518160128110611a2c57611a2c61291b565b60200201518383611a3c81612d22565b945081518110611a4e57611a4e61291b565b6020908102919091010152600101611a0d565b5060005b6012811015611ab95786608001518160128110611a8457611a8461291b565b60200201518383611a9481612d22565b945081518110611aa657611aa661291b565b6020908102919091010152600101611a65565b5085516040517fea50d0e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163ea50d0e491611b2f91908690600401612d5a565b602060405180830381865afa158015611b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b709190612d00565b9695505050505050565b600080600080611b8a8686611c5d565b925092509250611b9a8282611caa565b5090949350505050565b611bad82611dae565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611bff5761084d8282611e7d565b6109ca611f00565b60008282604051602001611c1c929190612dd7565b60405160208183030381529060405280519060200120905092915050565b60606106d773ffffffffffffffffffffffffffffffffffffffff83166014611f38565b60008060008351604103611c975760208401516040850151606086015160001a611c8988828585612097565b955095509550505050611ca3565b50508151600091506002905b9250925092565b6000826003811115611cbe57611cbe612df9565b03611cc7575050565b6001826003811115611cdb57611cdb612df9565b03611d12576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002826003811115611d2657611d26612df9565b03611d60576040517ffce698f700000000000000000000000000000000000000000000000000000000815260048101829052602401610cc6565b6003826003811115611d7457611d74612df9565b036109ca576040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260048101829052602401610cc6565b8073ffffffffffffffffffffffffffffffffffffffff163b600003611e17576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610cc6565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611ea79190612b8e565b600060405180830381855af49150503d8060008114611ee2576040519150601f19603f3d011682016040523d82523d6000602084013e611ee7565b606091505b5091509150611ef7858383612191565b95945050505050565b3415611071576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826000611f48846002612e28565b67ffffffffffffffff811115611f6057611f60612489565b6040519080825280601f01601f191660200182016040528015611f8a576020820181803683370190505b5090506000611f9a856002612e28565b611fa5906001612a27565b90505b600181111561204c577f303132333435363738396162636465660000000000000000000000000000000083600f1660108110611fe657611fe661291b565b1a60f81b82611ff6600284612e3f565b815181106120065761200661291b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049290921c9161204581612e52565b9050611fa8565b50811561208f576040517fe22e27eb0000000000000000000000000000000000000000000000000000000081526004810186905260248101859052604401610cc6565b949350505050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156120d25750600091506003905082612187565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015612126573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661217d57506000925060019150829050612187565b9250600091508190505b9450945094915050565b6060826121a6576121a182612220565b610762565b81511580156121ca575073ffffffffffffffffffffffffffffffffffffffff84163b155b15612219576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610cc6565b5080610762565b8051156122305780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006020828403121561227457600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461076257600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461113b57600080fd5b60008083601f8401126122d857600080fd5b50813567ffffffffffffffff8111156122f057600080fd5b60208301915083602082850101111561230857600080fd5b9250929050565b60008060008060006080868803121561232757600080fd5b8535612332816122a4565b94506020860135612342816122a4565b935060408601359250606086013567ffffffffffffffff81111561236557600080fd5b612371888289016122c6565b969995985093965092949392505050565b60008060006060848603121561239757600080fd5b833567ffffffffffffffff8111156123ae57600080fd5b840161012081870312156123c157600080fd5b95602085013595506040909401359392505050565b60008083601f8401126123e857600080fd5b50813567ffffffffffffffff81111561240057600080fd5b6020830191508360208260051b850101111561230857600080fd5b6000806020838503121561242e57600080fd5b823567ffffffffffffffff81111561244557600080fd5b612451858286016123d6565b90969095509350505050565b6000806040838503121561247057600080fd5b823561247b816122a4565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126124c957600080fd5b813567ffffffffffffffff8111156124e3576124e3612489565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff8111828210171561253057612530612489565b60405281815283820160200185101561254857600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561257857600080fd5b8235612583816122a4565b9150602083013567ffffffffffffffff81111561259f57600080fd5b6125ab858286016124b8565b9150509250929050565b60005b838110156125d05781810151838201526020016125b8565b50506000910152565b600081518084526125f18160208601602086016125b5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061076260208301846125d9565b60006020828403121561264857600080fd5b813567ffffffffffffffff81111561265f57600080fd5b82016060818503121561076257600080fd5b60006020828403121561268357600080fd5b813567ffffffffffffffff81111561269a57600080fd5b82016104e0818503121561076257600080fd5b600080600080606085870312156126c357600080fd5b84356126ce816122a4565b935060208501359250604085013567ffffffffffffffff8111156126f157600080fd5b6126fd878288016122c6565b95989497509550505050565b60008060008060008060008060a0898b03121561272557600080fd5b8835612730816122a4565b97506020890135612740816122a4565b9650604089013567ffffffffffffffff81111561275c57600080fd5b6127688b828c016123d6565b909750955050606089013567ffffffffffffffff81111561278857600080fd5b6127948b828c016123d6565b909550935050608089013567ffffffffffffffff8111156127b457600080fd5b6127c08b828c016122c6565b999c989b5096995094979396929594505050565b60008060008060008060a087890312156127ed57600080fd5b86356127f8816122a4565b95506020870135612808816122a4565b94506040870135935060608701359250608087013567ffffffffffffffff81111561283257600080fd5b61283e89828a016122c6565b979a9699509497509295939492505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261288557600080fd5b83018035915067ffffffffffffffff8211156128a057600080fd5b60200191503681900382131561230857600080fd5b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015612914577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261297e57600080fd5b9190910192915050565b60006020828403121561299a57600080fd5b8135610762816122a4565b600181811c908216806129b957607f821691505b6020821081036129f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156106d7576106d76129f8565b600082601f830112612a4b57600080fd5b604051610240810167ffffffffffffffff81118282101715612a6f57612a6f612489565b60405280610240840185811115612a8557600080fd5b845b81811015612a9f578035835260209283019201612a87565b509195945050505050565b60006104e08236031215612abd57600080fd5b60405160a0810167ffffffffffffffff81118282101715612ae057612ae0612489565b604052823567ffffffffffffffff811115612afa57600080fd5b612b06368286016124b8565b825250602083810135908201526040830135612b21816122a4565b6040820152612b333660608501612a3a565b6060820152612b46366102a08501612a3a565b608082015292915050565b6bffffffffffffffffffffffff81811683821601908111156106d7576106d76129f8565b600060208284031215612b8757600080fd5b5051919050565b6000825161297e8184602087016125b5565b601f82111561084d57806000526020600020601f840160051c81016020851015612bc75750805b601f840160051c820191505b818110156108f15760008155600101612bd3565b815167ffffffffffffffff811115612c0157612c01612489565b612c1581612c0f84546129a5565b84612ba0565b6020601f821160018114612c675760008315612c315750848201515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600385901b1c1916600184901b1784556108f1565b6000848152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08516915b82811015612cb55787850151825560209485019460019092019101612c95565b5084821015612cf157868401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b60f8161c191681555b50505050600190811b01905550565b600060208284031215612d1257600080fd5b8151801515811461076257600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d5357612d536129f8565b5060010190565b604081526000612d6d60408301856125d9565b828103602084015280845180835260208301915060208601925060005b81811015612da8578351835260209384019390920191600101612d8a565b50909695505050505050565b8060005b6012811015610e99578151845260209384019390910190600101612db8565b612de18184612db4565b612def610240820183612db4565b6104800192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b80820281158282048414176106d7576106d76129f8565b818103818111156106d7576106d76129f8565b600081612e6157612e616129f8565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea264697066735822122095301cc556c58edfde023ea6a2e317cf8e801c3fff406a53952923f363fae85164736f6c634300081b0033";

type SimpleAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleAccount__factory extends ContractFactory {
  constructor(...args: SimpleAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    anEntryPoint: AddressLike,
    proofVerifier_: AddressLike,
    publicKeyRegistry_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      anEntryPoint,
      proofVerifier_,
      publicKeyRegistry_,
      overrides || {}
    );
  }
  override deploy(
    anEntryPoint: AddressLike,
    proofVerifier_: AddressLike,
    publicKeyRegistry_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      anEntryPoint,
      proofVerifier_,
      publicKeyRegistry_,
      overrides || {}
    ) as Promise<
      SimpleAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleAccount__factory {
    return super.connect(runner) as SimpleAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleAccountInterface {
    return new Interface(_abi) as SimpleAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleAccount {
    return new Contract(address, _abi, runner) as unknown as SimpleAccount;
  }
}
