/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleAccount,
  SimpleAccountInterface,
} from "../../contracts/SimpleAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "proofVerifier_",
        type: "address",
      },
      {
        internalType: "contract PublicKeyRegistry",
        name: "publicKeyRegistry_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "StringsInsufficientHexLength",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accountId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "authProviderId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct SimpleAccount.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "accountId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "authProviderId",
            type: "bytes32",
          },
        ],
        internalType: "struct SimpleAccount.InitializeParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerInfo",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "expirationTimestamp",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofVerifier",
    outputs: [
      {
        internalType: "contract UltraVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicKeyRegistry",
    outputs: [
      {
        internalType: "contract PublicKeyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "jwtIat",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "jwtNonce",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "publicKeyHash",
            type: "bytes32",
          },
        ],
        internalType: "struct JwtVerifier.VerificationData",
        name: "verificationData",
        type: "tuple",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040523060805234801561001557600080fd5b50604051612ad1380380612ad183398101604081905261003491610124565b6001600160a01b0380831660a05280821660c052831660e05261005561005d565b505050610171565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100ad5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161461010c5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b038116811461010c57600080fd5b60008060006060848603121561013957600080fd5b83516101448161010f565b60208501519093506101558161010f565b60408501519092506101668161010f565b809150509250925092565b60805160a05160c05160e0516128e16101f0600039600081816104a701528181610834015281816108e201528181610deb01528181610ea901528181610ef001526110c70152600081816103ea01526115a201526000818161039101526118130152600081816112c6015281816112ef015261150b01526128e16000f3fe6080604052600436106101845760003560e01c806386aeebf7116100d6578063b387ef921161007f578063c399ec8811610059578063c399ec8814610568578063d087d2881461057d578063f23a6e611461059257600080fd5b8063b387ef92146104eb578063b61d27f614610500578063bc197c811461052057600080fd5b8063ad3cb1cc116100b0578063ad3cb1cc14610442578063b0d691fe14610498578063b2e684be146104cb57600080fd5b806386aeebf7146103d85780639a12ef391461040c5780639cfd7cff1461042c57600080fd5b80634bd834c71161013857806352d1902d1161011257806352d1902d146103545780636b124f5b146103695780637fa417b31461037f57600080fd5b80634bd834c7146102935780634d44560d146103215780634f1ef2861461034157600080fd5b806319822f7c1161016957806319822f7c1461023b57806334fcd5be146102695780634a58db191461028b57600080fd5b806301ffc9a714610190578063150b7a02146101c557600080fd5b3661018b57005b600080fd5b34801561019c57600080fd5b506101b06101ab366004611f33565b6105d8565b60405190151581526020015b60405180910390f35b3480156101d157600080fd5b5061020a6101e0366004611fe0565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101bc565b34801561024757600080fd5b5061025b610256366004612053565b6106bd565b6040519081526020016101bc565b34801561027557600080fd5b506102896102843660046120ec565b610749565b005b610289610832565b34801561029f57600080fd5b506002546102e89073ffffffffffffffffffffffffffffffffffffffff8116907401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526bffffffffffffffffffffffff9091166020830152016101bc565b34801561032d57600080fd5b5061028961033c36600461212e565b6108d8565b61028961034f366004612236565b61098f565b34801561036057600080fd5b5061025b6109ae565b34801561037557600080fd5b5061025b60015481565b34801561038b57600080fd5b506103b37f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101bc565b3480156103e457600080fd5b506103b37f000000000000000000000000000000000000000000000000000000000000000081565b34801561041857600080fd5b50610289610427366004612286565b6109dd565b34801561043857600080fd5b5061025b60005481565b34801561044e57600080fd5b5061048b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516101bc919061230f565b3480156104a457600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103b3565b3480156104d757600080fd5b506102896104e6366004612322565b610b60565b3480156104f757600080fd5b506103b3610cea565b34801561050c57600080fd5b5061028961051b36600461235d565b610d56565b34801561052c57600080fd5b5061020a61053b3660046123b9565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561057457600080fd5b5061025b610da5565b34801561058957600080fd5b5061025b610e5c565b34801561059e57600080fd5b5061020a6105ad366004612484565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061066b57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806106b757507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60007fb2e684be000000000000000000000000000000000000000000000000000000006106ed6060860186612500565b6106f691612565565b7fffffffff00000000000000000000000000000000000000000000000000000000160361072557506000610742565b61072d610ed8565b6107378484610f79565b905061074282611044565b9392505050565b6107516110af565b60005b8181101561082d57610825838383818110610771576107716125cb565b905060200281019061078391906125fa565b610791906020810190612638565b8484848181106107a3576107a36125cb565b90506020028101906107b591906125fa565b602001358585858181106107cb576107cb6125cb565b90506020028101906107dd91906125fa565b6107eb906040810190612500565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061118b92505050565b600101610754565b505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024016000604051808303818588803b1580156108bd57600080fd5b505af11580156108d1573d6000803e3d6000fd5b5050505050565b6108e0611208565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561097357600080fd5b505af1158015610987573d6000803e3d6000fd5b505050505050565b6109976112ae565b6109a0826113b2565b6109aa82826113ba565b5050565b60006109b86114f3565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610a285750825b905060008267ffffffffffffffff166001148015610a455750303b155b905081158015610a53575080155b15610a8a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610aeb5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b8535600055602086013560015583156109875784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b42610b71610e106020840135612684565b1015610bde576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4a77744163636f756e743a20657870697265642070726f6f660000000000000060448201526064015b60405180910390fd5b6000610bf1610bec83612697565b611562565b905080610c5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4a77744163636f756e743a20696e76616c69642070726f6f66000000000000006044820152606401610bd5565b6040518060400160405280836040013560001c73ffffffffffffffffffffffffffffffffffffffff1681526020016201518042610c97919061271a565b6bffffffffffffffffffffffff908116909152815160209092015116740100000000000000000000000000000000000000000273ffffffffffffffffffffffffffffffffffffffff909116176002555050565b6040805180820190915260025473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff166020820181905260009190421115610d5057600091505090565b51919050565b610d5e6110af565b610d9f848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061118b92505050565b50505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610e33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e57919061273e565b905090565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610e16565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610f77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610bd5565b565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c8120610ff481610fba610100870187612500565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061189492505050565b73ffffffffffffffffffffffffffffffffffffffff16611012610cea565b73ffffffffffffffffffffffffffffffffffffffff16146110375760019150506106b7565b5060009392505050565b50565b80156110415760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d80600081146108d1576040519150601f19603f3d011682016040523d82523d6000602084013e6108d1565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061112557506110f6610cea565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610f77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152606401610bd5565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516111b49190612757565b60006040518083038185875af1925050503d80600081146111f1576040519150601f19603f3d011682016040523d82523d6000602084013e6111f6565b606091505b5091509150816108d157805160208201fd5b611210610cea565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061124857503330145b610f77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606401610bd5565b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061137b57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113627f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610f77576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611041611208565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561143f575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261143c9181019061273e565b60015b61148d576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610bd5565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146114e9576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610bd5565b61082d83836118be565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610f77576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015460608201516040517f5879142a000000000000000000000000000000000000000000000000000000008152600481019290925260248201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635879142a90604401602060405180830381865afa1580156115fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116229190612769565b611688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f7075626c6963206b65792068617368206d69736d6174636800000000000000006044820152606401610bd5565b60006116978360400151611921565b80519091506003906000906116ac9083612684565b67ffffffffffffffff8111156116c4576116c461215a565b6040519080825280602002602001820160405280156116ed578160200160208202803683370190505b509050600080548282806117009061278b565b935081518110611712576117126125cb565b602002602001018181525050856020015160001b8282806117329061278b565b935081518110611744576117446125cb565b60209081029190910101526060860151828261175f8161278b565b935081518110611771576117716125cb565b60200260200101818152505060005b84518110156117d35784818151811061179b5761179b6125cb565b016020015160f81c83836117ae8161278b565b9450815181106117c0576117c06125cb565b6020908102919091010152600101611780565b5085516040517fea50d0e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163ea50d0e491611849919086906004016127c3565b602060405180830381865afa158015611866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188a9190612769565b9695505050505050565b6000806000806118a4868661192e565b9250925092506118b4828261197b565b5090949350505050565b6118c782611a7f565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156119195761082d8282611b4e565b6109aa611bd1565b60606106b7826020611c09565b600080600083516041036119685760208401516040850151606086015160001a61195a88828585611d68565b955095509550505050611974565b50508151600091506002905b9250925092565b600082600381111561198f5761198f61281d565b03611998575050565b60018260038111156119ac576119ac61281d565b036119e3576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028260038111156119f7576119f761281d565b03611a31576040517ffce698f700000000000000000000000000000000000000000000000000000000815260048101829052602401610bd5565b6003826003811115611a4557611a4561281d565b036109aa576040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260048101829052602401610bd5565b8073ffffffffffffffffffffffffffffffffffffffff163b600003611ae8576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610bd5565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611b789190612757565b600060405180830381855af49150503d8060008114611bb3576040519150601f19603f3d011682016040523d82523d6000602084013e611bb8565b606091505b5091509150611bc8858383611e62565b95945050505050565b3415610f77576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826000611c1984600261284c565b67ffffffffffffffff811115611c3157611c3161215a565b6040519080825280601f01601f191660200182016040528015611c5b576020820181803683370190505b5090506000611c6b85600261284c565b611c76906001612684565b90505b6001811115611d1d577f303132333435363738396162636465660000000000000000000000000000000083600f1660108110611cb757611cb76125cb565b1a60f81b82611cc7600284612863565b81518110611cd757611cd76125cb565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049290921c91611d1681612876565b9050611c79565b508115611d60576040517fe22e27eb0000000000000000000000000000000000000000000000000000000081526004810186905260248101859052604401610bd5565b949350505050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611da35750600091506003905082611e58565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611df7573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611e4e57506000925060019150829050611e58565b9250600091508190505b9450945094915050565b606082611e7757611e7282611ef1565b610742565b8151158015611e9b575073ffffffffffffffffffffffffffffffffffffffff84163b155b15611eea576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610bd5565b5080610742565b805115611f015780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060208284031215611f4557600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461074257600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461104157600080fd5b60008083601f840112611fa957600080fd5b50813567ffffffffffffffff811115611fc157600080fd5b602083019150836020828501011115611fd957600080fd5b9250929050565b600080600080600060808688031215611ff857600080fd5b853561200381611f75565b9450602086013561201381611f75565b935060408601359250606086013567ffffffffffffffff81111561203657600080fd5b61204288828901611f97565b969995985093965092949392505050565b60008060006060848603121561206857600080fd5b833567ffffffffffffffff81111561207f57600080fd5b8401610120818703121561209257600080fd5b95602085013595506040909401359392505050565b60008083601f8401126120b957600080fd5b50813567ffffffffffffffff8111156120d157600080fd5b6020830191508360208260051b8501011115611fd957600080fd5b600080602083850312156120ff57600080fd5b823567ffffffffffffffff81111561211657600080fd5b612122858286016120a7565b90969095509350505050565b6000806040838503121561214157600080fd5b823561214c81611f75565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261219a57600080fd5b813567ffffffffffffffff8111156121b4576121b461215a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff811182821017156122015761220161215a565b60405281815283820160200185101561221957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561224957600080fd5b823561225481611f75565b9150602083013567ffffffffffffffff81111561227057600080fd5b61227c85828601612189565b9150509250929050565b6000604082840312801561229957600080fd5b509092915050565b60005b838110156122bc5781810151838201526020016122a4565b50506000910152565b600081518084526122dd8160208601602086016122a1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061074260208301846122c5565b60006020828403121561233457600080fd5b813567ffffffffffffffff81111561234b57600080fd5b82016080818503121561074257600080fd5b6000806000806060858703121561237357600080fd5b843561237e81611f75565b935060208501359250604085013567ffffffffffffffff8111156123a157600080fd5b6123ad87828801611f97565b95989497509550505050565b60008060008060008060008060a0898b0312156123d557600080fd5b88356123e081611f75565b975060208901356123f081611f75565b9650604089013567ffffffffffffffff81111561240c57600080fd5b6124188b828c016120a7565b909750955050606089013567ffffffffffffffff81111561243857600080fd5b6124448b828c016120a7565b909550935050608089013567ffffffffffffffff81111561246457600080fd5b6124708b828c01611f97565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561249d57600080fd5b86356124a881611f75565b955060208701356124b881611f75565b94506040870135935060608701359250608087013567ffffffffffffffff8111156124e257600080fd5b6124ee89828a01611f97565b979a9699509497509295939492505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261253557600080fd5b83018035915067ffffffffffffffff82111561255057600080fd5b602001915036819003821315611fd957600080fd5b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156125c4577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261262e57600080fd5b9190910192915050565b60006020828403121561264a57600080fd5b813561074281611f75565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156106b7576106b7612655565b6000608082360312156126a957600080fd5b6040516080810167ffffffffffffffff811182821017156126cc576126cc61215a565b604052823567ffffffffffffffff8111156126e657600080fd5b6126f236828601612189565b8252506020838101359082015260408084013590820152606092830135928101929092525090565b6bffffffffffffffffffffffff81811683821601908111156106b7576106b7612655565b60006020828403121561275057600080fd5b5051919050565b6000825161262e8184602087016122a1565b60006020828403121561277b57600080fd5b8151801515811461074257600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127bc576127bc612655565b5060010190565b6040815260006127d660408301856122c5565b828103602084015280845180835260208301915060208601925060005b818110156128115783518352602093840193909201916001016127f3565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b80820281158282048414176106b7576106b7612655565b818103818111156106b7576106b7612655565b60008161288557612885612655565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220aa213b9f20219565d37154870a39ec89cc4e8a37302462a117fca63a4c4f893b64736f6c634300081b0033";

type SimpleAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleAccount__factory extends ContractFactory {
  constructor(...args: SimpleAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    anEntryPoint: AddressLike,
    proofVerifier_: AddressLike,
    publicKeyRegistry_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      anEntryPoint,
      proofVerifier_,
      publicKeyRegistry_,
      overrides || {}
    );
  }
  override deploy(
    anEntryPoint: AddressLike,
    proofVerifier_: AddressLike,
    publicKeyRegistry_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      anEntryPoint,
      proofVerifier_,
      publicKeyRegistry_,
      overrides || {}
    ) as Promise<
      SimpleAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleAccount__factory {
    return super.connect(runner) as SimpleAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleAccountInterface {
    return new Interface(_abi) as SimpleAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleAccount {
    return new Contract(address, _abi, runner) as unknown as SimpleAccount;
  }
}
