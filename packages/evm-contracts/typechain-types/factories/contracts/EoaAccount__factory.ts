/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EoaAccount,
  EoaAccountInterface,
} from "../../contracts/EoaAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "StringsInsufficientHexLength",
    type: "error",
  },
  {
    inputs: [],
    name: "accountId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authProviderId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "r",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "s",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.Signature",
        name: "signature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "authenticatorData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "clientDataJSON",
            type: "string",
          },
          {
            internalType: "uint16",
            name: "challengeIndex",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "typeIndex",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "userVerificationRequired",
            type: "bool",
          },
        ],
        internalType: "struct WebAuthnP256.Metadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getWebAuthnPublicKey",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofVerifier",
    outputs: [
      {
        internalType: "contract UltraVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicKeyRegistry",
    outputs: [
      {
        internalType: "contract PublicKeyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "jwtIat",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "jwtNonce",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "publicKeyHash",
            type: "bytes32",
          },
        ],
        internalType: "struct JwtVerifierP256.VerificationData",
        name: "verificationData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "newP256PublicKey",
        type: "tuple",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "webauthnPublicKey_",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "accountId_",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "authProviderId_",
        type: "bytes32",
      },
      {
        internalType: "contract PublicKeyRegistry",
        name: "publicKeyRegistry_",
        type: "address",
      },
      {
        internalType: "contract UltraVerifier",
        name: "proofVerifier_",
        type: "address",
      },
    ],
    name: "setAccountId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "webauthnPublicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506118a88061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80639cfd7cff11610076578063affed0e01161005b578063affed0e014610198578063bb3da92d146101a1578063c389ca27146101df57600080fd5b80639cfd7cff1461017c578063ada4799c1461018557600080fd5b80637dc0872e116100a75780637dc0872e146100f45780637fa417b31461011757806386aeebf71461015c57600080fd5b80631e203b54146100c35780636b124f5b146100d8575b600080fd5b6100d66100d1366004611098565b6101f2565b005b6100e160015481565b6040519081526020015b60405180910390f35b600554600654610102919082565b604080519283526020830191909152016100eb565b6003546101379073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100eb565b6002546101379073ffffffffffffffffffffffffffffffffffffffff1681565b6100e160005481565b6100d6610193366004611111565b610382565b6100e160045481565b6040805180820182526000808252602091820152815180830183526005548082526006549183019182528351908152905191810191909152016100eb565b6100d66101ed366004611181565b610455565b610202606083016040840161124e565b73ffffffffffffffffffffffffffffffffffffffff168160405160200161023b9190813581526020918201359181019190915260400190565b6040516020818303038152906040528051906020012060601c73ffffffffffffffffffffffffffffffffffffffff16146102d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f696e76616c696420576562417574686e207075626c6963206b6579000000000060448201526064015b60405180910390fd5b61030d6102e28361137b565b60005460015460025460035473ffffffffffffffffffffffffffffffffffffffff91821691166105bd565b610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016102cd565b80356005556020013560065550565b3330146103eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6e6f742073656c6600000000000000000000000000000000000000000000000060448201526064016102cd565b84356005556020909401356006556000929092556001556002805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560038054929093169116179055565b600480546000918261046683611436565b919050558787878760405160200161048295949392919061146e565b6040516020818303038152906040528051906020012090506104d381836104a890611519565b6104b7368790038701876115d2565b60408051808201909152600554815260065460208201526108b0565b6104dc57600080fd5b60008773ffffffffffffffffffffffffffffffffffffffff16858888604051610506929190611623565b60006040518083038185875af1925050503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b50509050806105b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f63616c6c206661696c656400000000000000000000000000000000000000000060448201526064016102cd565b5050505050505050565b60608501516040517f5879142a00000000000000000000000000000000000000000000000000000000815260048101859052602481019190915260009073ffffffffffffffffffffffffffffffffffffffff841690635879142a90604401602060405180830381865afa158015610638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065c9190611633565b6106c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f7075626c6963206b65792068617368206d69736d61746368000000000000000060448201526064016102cd565b60006106d18760400151610ae2565b80519091506003906000906106e69083611650565b67ffffffffffffffff8111156106fe576106fe61126b565b604051908082528060200260200182016040528015610727578160200160208202803683370190505b509050600088828261073881611436565b93508151811061074a5761074a611663565b602002602001018181525050896020015160001b82828061076a90611436565b93508151811061077c5761077c611663565b602090810291909101015260608a0151828261079781611436565b9350815181106107a9576107a9611663565b60200260200101818152505060005b845181101561080b578481815181106107d3576107d3611663565b016020015160f81c83836107e681611436565b9450815181106107f8576107f8611663565b60209081029190910101526001016107b8565b5089516040517fea50d0e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88169163ea50d0e491610861919086906004016116b6565b602060405180830381865afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190611633565b9a9950505050505050505050565b6000602584600001515110806108f257506108f084600001516020815181106108db576108db611663565b602001015160f81c60f81b8560800151610b0b565b155b156108ff57506000610ada565b60006040518060400160405280601581526020017f2274797065223a22776562617574686e2e6765742200000000000000000000008152509050610950818660200151876060015161ffff16610bfd565b61095e576000915050610ada565b600061098d8760405160200161097691815260200190565b604051602081830303815290604052600180610cde565b90506000816040516020016109a29190611750565b60405160208183030381529060405290506109ca818860200151896040015161ffff16610bfd565b6109da5760009350505050610ada565b6000600288602001516040516109f091906117bc565b602060405180830381855afa158015610a0d573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610a3091906117d8565b905060006002896000015183604051602001610a4d9291906117f1565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a85916117bc565b602060405180830381855afa158015610aa2573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610ac591906117d8565b9050610ad2818989610def565b955050505050505b949350505050565b6060610b0573ffffffffffffffffffffffffffffffffffffffff83166014610f29565b92915050565b60007f010000000000000000000000000000000000000000000000000000000000000083811614610b3e57506000610b05565b818015610b6d57507f040000000000000000000000000000000000000000000000000000000000000083811614155b15610b7a57506000610b05565b7f080000000000000000000000000000000000000000000000000000000000000083811614610bf4577ff0000000000000000000000000000000000000000000000000000000000000007f1000000000000000000000000000000000000000000000000000000000000000841601610bf457506000610b05565b50600192915050565b825182516000918591859190845b82811015610ccd5781610c1e8289611650565b10610c3157600095505050505050610cd7565b83610c3c8289611650565b81518110610c4c57610c4c611663565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916858281518110610c8b57610c8b611663565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614610cc557600095505050505050610cd7565b600101610c0b565b5060019450505050505b9392505050565b606083518015610de7576003600282010460021b60405192507f4142434445464748494a4b4c4d4e4f505152535455565758595a616263646566601f526106708515027f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f18603f52602083018181018388602001018051600082525b60038a0199508951603f8160121c1651600053603f81600c1c1651600153603f8160061c1651600253603f811651600353506000518452600484019350828410610d5a5790526020016040527f3d3d000000000000000000000000000000000000000000000000000000000000600384066002048083039190915260008615159091029182900352900382525b509392505050565b8151602080840151835184830151604080519485018990528401949094526060830191909152608082015260a08101919091526000908190819060149060c001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610e67916117bc565b600060405180830381855afa9150503d8060008114610ea2576040519150601f19603f3d011682016040523d82523d6000602084013e610ea7565b606091505b5091509150818015610eba575080516020145b8015610f1f575080601f81518110610ed457610ed4611663565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f0100000000000000000000000000000000000000000000000000000000000000145b9695505050505050565b6060826000610f39846002611813565b67ffffffffffffffff811115610f5157610f5161126b565b6040519080825280601f01601f191660200182016040528015610f7b576020820181803683370190505b5090506000610f8b856002611813565b610f96906001611650565b90505b600181111561103d577f303132333435363738396162636465660000000000000000000000000000000083600f1660108110610fd757610fd7611663565b1a60f81b82610fe760028461182a565b81518110610ff757610ff7611663565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049290921c916110368161183d565b9050610f99565b508115610ada576040517fe22e27eb00000000000000000000000000000000000000000000000000000000815260048101869052602481018590526044016102cd565b60006040828403121561109257600080fd5b50919050565b600080606083850312156110ab57600080fd5b823567ffffffffffffffff8111156110c257600080fd5b8301608081860312156110d457600080fd5b91506110e38460208501611080565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461110e57600080fd5b50565b600080600080600060c0868803121561112957600080fd5b6111338787611080565b945060408601359350606086013592506080860135611151816110ec565b915060a0860135611161816110ec565b809150509295509295909350565b600060a0828403121561109257600080fd5b60008060008060008060c0878903121561119a57600080fd5b86356111a5816110ec565b9550602087013567ffffffffffffffff8111156111c157600080fd5b8701601f810189136111d257600080fd5b803567ffffffffffffffff8111156111e957600080fd5b8960208284010111156111fb57600080fd5b60209190910195509350604087013592506112198860608901611080565b915060a087013567ffffffffffffffff81111561123557600080fd5b61124189828a0161116f565b9150509295509295509295565b60006020828403121561126057600080fd5b8135610cd7816110ec565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156112bd576112bd61126b565b60405290565b60008067ffffffffffffffff8411156112de576112de61126b565b506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85018116603f0116810181811067ffffffffffffffff8211171561132b5761132b61126b565b60405283815290508082840185101561134357600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261136c57600080fd5b610cd7838335602085016112c3565b60006080823603121561138d57600080fd5b6040516080810167ffffffffffffffff811182821017156113b0576113b061126b565b604052823567ffffffffffffffff8111156113ca57600080fd5b6113d63682860161135b565b8252506020838101359082015260408301356113f1816110ec565b6040820152606092830135928101929092525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361146757611467611407565b5060010190565b85815273ffffffffffffffffffffffffffffffffffffffff8516602082015260806040820152826080820152828460a0830137600060a08483010152600060a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011683010190508260608301529695505050505050565b803561ffff811681146114fb57600080fd5b919050565b801515811461110e57600080fd5b80356114fb81611500565b600060a0823603121561152b57600080fd5b61153361129a565b823567ffffffffffffffff81111561154a57600080fd5b6115563682860161135b565b825250602083013567ffffffffffffffff81111561157357600080fd5b830136601f82011261158457600080fd5b611593368235602084016112c3565b6020830152506115a5604084016114e9565b60408201526115b6606084016114e9565b60608201526115c76080840161150e565b608082015292915050565b600060408284031280156115e557600080fd5b506040805190810167ffffffffffffffff811182821017156116095761160961126b565b604052823581526020928301359281019290925250919050565b8183823760009101908152919050565b60006020828403121561164557600080fd5b8151610cd781611500565b80820180821115610b0557610b05611407565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b838110156116ad578181015183820152602001611695565b50506000910152565b60408152600083518060408401526116d5816060850160208801611692565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201828103606090810160208086019190915285519183018290528501916000916080909101905b808310156117455783518252602082019150602084019350600183019250611722565b509695505050505050565b7f226368616c6c656e6765223a220000000000000000000000000000000000000081526000825161178881600d850160208701611692565b7f2200000000000000000000000000000000000000000000000000000000000000600d939091019283015250600e01919050565b600082516117ce818460208701611692565b9190910192915050565b6000602082840312156117ea57600080fd5b5051919050565b60008351611803818460208801611692565b9190910191825250602001919050565b8082028115828204841417610b0557610b05611407565b81810381811115610b0557610b05611407565b60008161184c5761184c611407565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea264697066735822122056d66355f1e6b165537ac1124a9e92ff7eb9252408d2f522ff7c4f6721b8f6d564736f6c634300081b0033";

type EoaAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EoaAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EoaAccount__factory extends ContractFactory {
  constructor(...args: EoaAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EoaAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EoaAccount__factory {
    return super.connect(runner) as EoaAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EoaAccountInterface {
    return new Interface(_abi) as EoaAccountInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EoaAccount {
    return new Contract(address, _abi, runner) as unknown as EoaAccount;
  }
}
