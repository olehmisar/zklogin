/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EoaAccount,
  EoaAccountInterface,
} from "../../contracts/EoaAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "StringsInsufficientHexLength",
    type: "error",
  },
  {
    inputs: [],
    name: "accountId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authProviderId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dummy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "r",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "s",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.Signature",
        name: "signature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "authenticatorData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "clientDataJSON",
            type: "string",
          },
          {
            internalType: "uint16",
            name: "challengeIndex",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "typeIndex",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "userVerificationRequired",
            type: "bool",
          },
        ],
        internalType: "struct WebAuthnP256.Metadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "getDigest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hello",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofVerifier",
    outputs: [
      {
        internalType: "contract UltraVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicKeyRegistry",
    outputs: [
      {
        internalType: "contract PublicKeyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "jwtIat",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "jwtNonce",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "publicKeyHash",
            type: "bytes32",
          },
        ],
        internalType: "struct JwtVerifierP256.VerificationData",
        name: "verificationData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "newP256PublicKey",
        type: "tuple",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "webauthnPublicKey_",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "accountId_",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "authProviderId_",
        type: "bytes32",
      },
      {
        internalType: "contract PublicKeyRegistry",
        name: "publicKeyRegistry_",
        type: "address",
      },
      {
        internalType: "contract UltraVerifier",
        name: "proofVerifier_",
        type: "address",
      },
    ],
    name: "setAccountId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "webauthnPublicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506118d08061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806386aeebf711610081578063affed0e01161005b578063affed0e0146101f1578063c389ca27146101fa578063e7a5d4f91461020d57600080fd5b806386aeebf7146101b55780639cfd7cff146101d5578063ada4799c146101de57600080fd5b80636b124f5b116100b25780636b124f5b146101365780637dc0872e1461014d5780637fa417b31461017057600080fd5b806319ff1d21146100d95780631e203b541461012157806332e43a1114610134575b600080fd5b604080518082018252600b81527f68656c6c6f20776f726c64000000000000000000000000000000000000000000602082015290516101189190611076565b60405180910390f35b61013461012f3660046110a1565b610220565b005b61013f60015481565b604051908152602001610118565b60055460065461015b919082565b60408051928352602083019190915201610118565b6003546101909073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610118565b6002546101909073ffffffffffffffffffffffffffffffffffffffff1681565b61013f60005481565b6101346101ec36600461111a565b6102d1565b61013f60045481565b61013461020836600461118a565b6103a4565b61013f61021b366004611367565b61050c565b61025761022c836113c1565b60005460015460025460035473ffffffffffffffffffffffffffffffffffffffff9182169116610547565b6102c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c69642070726f6f660000000000000000000000000000000000000060448201526064015b60405180910390fd5b80356005556020013560065550565b33301461033a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6e6f742073656c6600000000000000000000000000000000000000000000000060448201526064016102b9565b84356005556020909401356006556000929092556001556002805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560038054929093169116179055565b60048054600091826103b58361147c565b91905055878787876040516020016103d19594939291906114b4565b60405160208183030381529060405280519060200120905061042281836103f79061155f565b61040636879003870187611618565b604080518082019091526005548152600654602082015261083a565b61042b57600080fd5b60008773ffffffffffffffffffffffffffffffffffffffff16858888604051610455929190611669565b60006040518083038185875af1925050503d8060008114610492576040519150601f19603f3d011682016040523d82523d6000602084013e610497565b606091505b5050905080610502576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f63616c6c206661696c656400000000000000000000000000000000000000000060448201526064016102b9565b5050505050505050565b60006004548484846040516020016105279493929190611679565b6040516020818303038152906040528051906020012090505b9392505050565b60608501516040517f5879142a00000000000000000000000000000000000000000000000000000000815260048101859052602481019190915260009073ffffffffffffffffffffffffffffffffffffffff841690635879142a90604401602060405180830381865afa1580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e691906116bf565b61064c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f7075626c6963206b65792068617368206d69736d61746368000000000000000060448201526064016102b9565b600061065b8760400151610a6c565b805190915060039060009061067090836116dc565b67ffffffffffffffff81111561068857610688611257565b6040519080825280602002602001820160405280156106b1578160200160208202803683370190505b50905060008882826106c28161147c565b9350815181106106d4576106d46116ef565b602002602001018181525050896020015160001b8282806106f49061147c565b935081518110610706576107066116ef565b602090810291909101015260608a015182826107218161147c565b935081518110610733576107336116ef565b60200260200101818152505060005b84518110156107955784818151811061075d5761075d6116ef565b016020015160f81c83836107708161147c565b945081518110610782576107826116ef565b6020908102919091010152600101610742565b5089516040517fea50d0e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88169163ea50d0e4916107eb9190869060040161171e565b602060405180830381865afa158015610808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c91906116bf565b9a9950505050505050505050565b60006025846000015151108061087c575061087a8460000151602081518110610865576108656116ef565b602001015160f81c60f81b8560800151610a95565b155b1561088957506000610a64565b60006040518060400160405280601581526020017f2274797065223a22776562617574686e2e67657422000000000000000000000081525090506108da818660200151876060015161ffff16610b87565b6108e8576000915050610a64565b60006109178760405160200161090091815260200190565b604051602081830303815290604052600180610c66565b905060008160405160200161092c9190611778565b6040516020818303038152906040529050610954818860200151896040015161ffff16610b87565b6109645760009350505050610a64565b60006002886020015160405161097a91906117e4565b602060405180830381855afa158015610997573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906109ba9190611800565b9050600060028960000151836040516020016109d7929190611819565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a0f916117e4565b602060405180830381855afa158015610a2c573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610a4f9190611800565b9050610a5c818989610d77565b955050505050505b949350505050565b6060610a8f73ffffffffffffffffffffffffffffffffffffffff83166014610eb1565b92915050565b60007f010000000000000000000000000000000000000000000000000000000000000083811614610ac857506000610a8f565b818015610af757507f040000000000000000000000000000000000000000000000000000000000000083811614155b15610b0457506000610a8f565b7f080000000000000000000000000000000000000000000000000000000000000083811614610b7e577ff0000000000000000000000000000000000000000000000000000000000000007f1000000000000000000000000000000000000000000000000000000000000000841601610b7e57506000610a8f565b50600192915050565b825182516000918591859190845b82811015610c575781610ba882896116dc565b10610bbb57600095505050505050610540565b83610bc682896116dc565b81518110610bd657610bd66116ef565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916858281518110610c1557610c156116ef565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614610c4f57600095505050505050610540565b600101610b95565b50600198975050505050505050565b606083518015610d6f576003600282010460021b60405192507f4142434445464748494a4b4c4d4e4f505152535455565758595a616263646566601f526106708515027f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f18603f52602083018181018388602001018051600082525b60038a0199508951603f8160121c1651600053603f81600c1c1651600153603f8160061c1651600253603f811651600353506000518452600484019350828410610ce25790526020016040527f3d3d000000000000000000000000000000000000000000000000000000000000600384066002048083039190915260008615159091029182900352900382525b509392505050565b8151602080840151835184830151604080519485018990528401949094526060830191909152608082015260a08101919091526000908190819060149060c001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610def916117e4565b600060405180830381855afa9150503d8060008114610e2a576040519150601f19603f3d011682016040523d82523d6000602084013e610e2f565b606091505b5091509150818015610e42575080516020145b8015610ea7575080601f81518110610e5c57610e5c6116ef565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f0100000000000000000000000000000000000000000000000000000000000000145b9695505050505050565b6060826000610ec184600261183b565b67ffffffffffffffff811115610ed957610ed9611257565b6040519080825280601f01601f191660200182016040528015610f03576020820181803683370190505b5090506000610f1385600261183b565b610f1e9060016116dc565b90505b6001811115610fc5577f303132333435363738396162636465660000000000000000000000000000000083600f1660108110610f5f57610f5f6116ef565b1a60f81b82610f6f600284611852565b81518110610f7f57610f7f6116ef565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049290921c91610fbe81611865565b9050610f21565b508115610a64576040517fe22e27eb00000000000000000000000000000000000000000000000000000000815260048101869052602481018590526044016102b9565b60005b8381101561102357818101518382015260200161100b565b50506000910152565b60008151808452611044816020860160208601611008565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610540602083018461102c565b60006040828403121561109b57600080fd5b50919050565b600080606083850312156110b457600080fd5b823567ffffffffffffffff8111156110cb57600080fd5b8301608081860312156110dd57600080fd5b91506110ec8460208501611089565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461111757600080fd5b50565b600080600080600060c0868803121561113257600080fd5b61113c8787611089565b94506040860135935060608601359250608086013561115a816110f5565b915060a086013561116a816110f5565b809150509295509295909350565b600060a0828403121561109b57600080fd5b60008060008060008060c087890312156111a357600080fd5b86356111ae816110f5565b9550602087013567ffffffffffffffff8111156111ca57600080fd5b8701601f810189136111db57600080fd5b803567ffffffffffffffff8111156111f257600080fd5b89602082840101111561120457600080fd5b60209190910195509350604087013592506112228860608901611089565b915060a087013567ffffffffffffffff81111561123e57600080fd5b61124a89828a01611178565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156112a9576112a9611257565b60405290565b60008067ffffffffffffffff8411156112ca576112ca611257565b506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85018116603f0116810181811067ffffffffffffffff8211171561131757611317611257565b60405283815290508082840185101561132f57600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261135857600080fd5b610540838335602085016112af565b60008060006060848603121561137c57600080fd5b8335611387816110f5565b9250602084013567ffffffffffffffff8111156113a357600080fd5b6113af86828701611347565b93969395505050506040919091013590565b6000608082360312156113d357600080fd5b6040516080810167ffffffffffffffff811182821017156113f6576113f6611257565b604052823567ffffffffffffffff81111561141057600080fd5b61141c36828601611347565b825250602083810135908201526040830135611437816110f5565b6040820152606092830135928101929092525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114ad576114ad61144d565b5060010190565b85815273ffffffffffffffffffffffffffffffffffffffff8516602082015260806040820152826080820152828460a0830137600060a08483010152600060a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011683010190508260608301529695505050505050565b803561ffff8116811461154157600080fd5b919050565b801515811461111757600080fd5b803561154181611546565b600060a0823603121561157157600080fd5b611579611286565b823567ffffffffffffffff81111561159057600080fd5b61159c36828601611347565b825250602083013567ffffffffffffffff8111156115b957600080fd5b830136601f8201126115ca57600080fd5b6115d9368235602084016112af565b6020830152506115eb6040840161152f565b60408201526115fc6060840161152f565b606082015261160d60808401611554565b608082015292915050565b6000604082840312801561162b57600080fd5b506040805190810167ffffffffffffffff8111828210171561164f5761164f611257565b604052823581526020928301359281019290925250919050565b8183823760009101908152919050565b84815273ffffffffffffffffffffffffffffffffffffffff841660208201526080604082015260006116ae608083018561102c565b905082606083015295945050505050565b6000602082840312156116d157600080fd5b815161054081611546565b80820180821115610a8f57610a8f61144d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b604081526000611731604083018561102c565b828103602084015280845180835260208301915060208601925060005b8181101561176c57835183526020938401939092019160010161174e565b50909695505050505050565b7f226368616c6c656e6765223a22000000000000000000000000000000000000008152600082516117b081600d850160208701611008565b7f2200000000000000000000000000000000000000000000000000000000000000600d939091019283015250600e01919050565b600082516117f6818460208701611008565b9190910192915050565b60006020828403121561181257600080fd5b5051919050565b6000835161182b818460208801611008565b9190910191825250602001919050565b8082028115828204841417610a8f57610a8f61144d565b81810381811115610a8f57610a8f61144d565b6000816118745761187461144d565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea26469706673582212202e916caa2d3c55f1d546f6801ba3d52db3284ab540e6bef7811f3a2fc7fba72d64736f6c634300081b0033";

type EoaAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EoaAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EoaAccount__factory extends ContractFactory {
  constructor(...args: EoaAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EoaAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EoaAccount__factory {
    return super.connect(runner) as EoaAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EoaAccountInterface {
    return new Interface(_abi) as EoaAccountInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EoaAccount {
    return new Contract(address, _abi, runner) as unknown as EoaAccount;
  }
}
