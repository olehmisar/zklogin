/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EoaAccount,
  EoaAccountInterface,
} from "../../contracts/EoaAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "StringsInsufficientHexLength",
    type: "error",
  },
  {
    inputs: [],
    name: "accountId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authProviderId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dummy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "r",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "s",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.Signature",
        name: "signature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "authenticatorData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "clientDataJSON",
            type: "string",
          },
          {
            internalType: "uint16",
            name: "challengeIndex",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "typeIndex",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "userVerificationRequired",
            type: "bool",
          },
        ],
        internalType: "struct WebAuthnP256.Metadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "getDigest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hello",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofVerifier",
    outputs: [
      {
        internalType: "contract UltraVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicKeyRegistry",
    outputs: [
      {
        internalType: "contract PublicKeyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "jwtIat",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "jwtNonce",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "publicKeyHash",
            type: "bytes32",
          },
        ],
        internalType: "struct JwtVerifierP256.VerificationData",
        name: "verificationData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "newP256PublicKey",
        type: "tuple",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "webauthnPublicKey_",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "accountId_",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "authProviderId_",
        type: "bytes32",
      },
      {
        internalType: "contract PublicKeyRegistry",
        name: "publicKeyRegistry_",
        type: "address",
      },
      {
        internalType: "contract UltraVerifier",
        name: "proofVerifier_",
        type: "address",
      },
    ],
    name: "setAccountId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "webauthnPublicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506119cc8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806386aeebf711610081578063affed0e01161005b578063affed0e0146101f1578063c389ca27146101fa578063e7a5d4f91461020d57600080fd5b806386aeebf7146101b55780639cfd7cff146101d5578063ada4799c146101de57600080fd5b80636b124f5b116100b25780636b124f5b146101365780637dc0872e1461014d5780637fa417b31461017057600080fd5b806319ff1d21146100d95780631e203b541461012157806332e43a1114610134575b600080fd5b604080518082018252600b81527f68656c6c6f20776f726c64000000000000000000000000000000000000000000602082015290516101189190611155565b60405180910390f35b61013461012f366004611180565b610220565b005b61013f60015481565b604051908152602001610118565b60055460065461015b919082565b60408051928352602083019190915201610118565b6003546101909073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610118565b6002546101909073ffffffffffffffffffffffffffffffffffffffff1681565b61013f60005481565b6101346101ec3660046111f9565b6103b0565b61013f60045481565b610134610208366004611269565b610483565b61013f61021b366004611446565b6105eb565b61023060608301604084016114a0565b73ffffffffffffffffffffffffffffffffffffffff16816040516020016102699190813581526020918201359181019190915260400190565b6040516020818303038152906040528051906020012060601c73ffffffffffffffffffffffffffffffffffffffff1614610304576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f696e76616c696420576562417574686e207075626c6963206b6579000000000060448201526064015b60405180910390fd5b61033b610310836114bd565b60005460015460025460035473ffffffffffffffffffffffffffffffffffffffff9182169116610626565b6103a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016102fb565b80356005556020013560065550565b333014610419576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6e6f742073656c6600000000000000000000000000000000000000000000000060448201526064016102fb565b84356005556020909401356006556000929092556001556002805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560038054929093169116179055565b600480546000918261049483611578565b91905055878787876040516020016104b09594939291906115b0565b60405160208183030381529060405280519060200120905061050181836104d69061165b565b6104e536879003870187611714565b6040805180820190915260055481526006546020820152610919565b61050a57600080fd5b60008773ffffffffffffffffffffffffffffffffffffffff16858888604051610534929190611765565b60006040518083038185875af1925050503d8060008114610571576040519150601f19603f3d011682016040523d82523d6000602084013e610576565b606091505b50509050806105e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f63616c6c206661696c656400000000000000000000000000000000000000000060448201526064016102fb565b5050505050505050565b60006004548484846040516020016106069493929190611775565b6040516020818303038152906040528051906020012090505b9392505050565b60608501516040517f5879142a00000000000000000000000000000000000000000000000000000000815260048101859052602481019190915260009073ffffffffffffffffffffffffffffffffffffffff841690635879142a90604401602060405180830381865afa1580156106a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c591906117bb565b61072b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f7075626c6963206b65792068617368206d69736d61746368000000000000000060448201526064016102fb565b600061073a8760400151610b4b565b805190915060039060009061074f90836117d8565b67ffffffffffffffff81111561076757610767611336565b604051908082528060200260200182016040528015610790578160200160208202803683370190505b50905060008882826107a181611578565b9350815181106107b3576107b36117eb565b602002602001018181525050896020015160001b8282806107d390611578565b9350815181106107e5576107e56117eb565b602090810291909101015260608a0151828261080081611578565b935081518110610812576108126117eb565b60200260200101818152505060005b84518110156108745784818151811061083c5761083c6117eb565b016020015160f81c838361084f81611578565b945081518110610861576108616117eb565b6020908102919091010152600101610821565b5089516040517fea50d0e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88169163ea50d0e4916108ca9190869060040161181a565b602060405180830381865afa1580156108e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090b91906117bb565b9a9950505050505050505050565b60006025846000015151108061095b57506109598460000151602081518110610944576109446117eb565b602001015160f81c60f81b8560800151610b74565b155b1561096857506000610b43565b60006040518060400160405280601581526020017f2274797065223a22776562617574686e2e67657422000000000000000000000081525090506109b9818660200151876060015161ffff16610c66565b6109c7576000915050610b43565b60006109f6876040516020016109df91815260200190565b604051602081830303815290604052600180610d45565b9050600081604051602001610a0b9190611874565b6040516020818303038152906040529050610a33818860200151896040015161ffff16610c66565b610a435760009350505050610b43565b600060028860200151604051610a5991906118e0565b602060405180830381855afa158015610a76573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610a9991906118fc565b905060006002896000015183604051602001610ab6929190611915565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610aee916118e0565b602060405180830381855afa158015610b0b573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610b2e91906118fc565b9050610b3b818989610e56565b955050505050505b949350505050565b6060610b6e73ffffffffffffffffffffffffffffffffffffffff83166014610f90565b92915050565b60007f010000000000000000000000000000000000000000000000000000000000000083811614610ba757506000610b6e565b818015610bd657507f040000000000000000000000000000000000000000000000000000000000000083811614155b15610be357506000610b6e565b7f080000000000000000000000000000000000000000000000000000000000000083811614610c5d577ff0000000000000000000000000000000000000000000000000000000000000007f1000000000000000000000000000000000000000000000000000000000000000841601610c5d57506000610b6e565b50600192915050565b825182516000918591859190845b82811015610d365781610c8782896117d8565b10610c9a5760009550505050505061061f565b83610ca582896117d8565b81518110610cb557610cb56117eb565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916858281518110610cf457610cf46117eb565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614610d2e5760009550505050505061061f565b600101610c74565b50600198975050505050505050565b606083518015610e4e576003600282010460021b60405192507f4142434445464748494a4b4c4d4e4f505152535455565758595a616263646566601f526106708515027f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f18603f52602083018181018388602001018051600082525b60038a0199508951603f8160121c1651600053603f81600c1c1651600153603f8160061c1651600253603f811651600353506000518452600484019350828410610dc15790526020016040527f3d3d000000000000000000000000000000000000000000000000000000000000600384066002048083039190915260008615159091029182900352900382525b509392505050565b8151602080840151835184830151604080519485018990528401949094526060830191909152608082015260a08101919091526000908190819060149060c001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610ece916118e0565b600060405180830381855afa9150503d8060008114610f09576040519150601f19603f3d011682016040523d82523d6000602084013e610f0e565b606091505b5091509150818015610f21575080516020145b8015610f86575080601f81518110610f3b57610f3b6117eb565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f0100000000000000000000000000000000000000000000000000000000000000145b9695505050505050565b6060826000610fa0846002611937565b67ffffffffffffffff811115610fb857610fb8611336565b6040519080825280601f01601f191660200182016040528015610fe2576020820181803683370190505b5090506000610ff2856002611937565b610ffd9060016117d8565b90505b60018111156110a4577f303132333435363738396162636465660000000000000000000000000000000083600f166010811061103e5761103e6117eb565b1a60f81b8261104e60028461194e565b8151811061105e5761105e6117eb565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049290921c9161109d81611961565b9050611000565b508115610b43576040517fe22e27eb00000000000000000000000000000000000000000000000000000000815260048101869052602481018590526044016102fb565b60005b838110156111025781810151838201526020016110ea565b50506000910152565b600081518084526111238160208601602086016110e7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061061f602083018461110b565b60006040828403121561117a57600080fd5b50919050565b6000806060838503121561119357600080fd5b823567ffffffffffffffff8111156111aa57600080fd5b8301608081860312156111bc57600080fd5b91506111cb8460208501611168565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146111f657600080fd5b50565b600080600080600060c0868803121561121157600080fd5b61121b8787611168565b945060408601359350606086013592506080860135611239816111d4565b915060a0860135611249816111d4565b809150509295509295909350565b600060a0828403121561117a57600080fd5b60008060008060008060c0878903121561128257600080fd5b863561128d816111d4565b9550602087013567ffffffffffffffff8111156112a957600080fd5b8701601f810189136112ba57600080fd5b803567ffffffffffffffff8111156112d157600080fd5b8960208284010111156112e357600080fd5b60209190910195509350604087013592506113018860608901611168565b915060a087013567ffffffffffffffff81111561131d57600080fd5b61132989828a01611257565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561138857611388611336565b60405290565b60008067ffffffffffffffff8411156113a9576113a9611336565b506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85018116603f0116810181811067ffffffffffffffff821117156113f6576113f6611336565b60405283815290508082840185101561140e57600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261143757600080fd5b61061f8383356020850161138e565b60008060006060848603121561145b57600080fd5b8335611466816111d4565b9250602084013567ffffffffffffffff81111561148257600080fd5b61148e86828701611426565b93969395505050506040919091013590565b6000602082840312156114b257600080fd5b813561061f816111d4565b6000608082360312156114cf57600080fd5b6040516080810167ffffffffffffffff811182821017156114f2576114f2611336565b604052823567ffffffffffffffff81111561150c57600080fd5b61151836828601611426565b825250602083810135908201526040830135611533816111d4565b6040820152606092830135928101929092525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115a9576115a9611549565b5060010190565b85815273ffffffffffffffffffffffffffffffffffffffff8516602082015260806040820152826080820152828460a0830137600060a08483010152600060a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011683010190508260608301529695505050505050565b803561ffff8116811461163d57600080fd5b919050565b80151581146111f657600080fd5b803561163d81611642565b600060a0823603121561166d57600080fd5b611675611365565b823567ffffffffffffffff81111561168c57600080fd5b61169836828601611426565b825250602083013567ffffffffffffffff8111156116b557600080fd5b830136601f8201126116c657600080fd5b6116d53682356020840161138e565b6020830152506116e76040840161162b565b60408201526116f86060840161162b565b606082015261170960808401611650565b608082015292915050565b6000604082840312801561172757600080fd5b506040805190810167ffffffffffffffff8111828210171561174b5761174b611336565b604052823581526020928301359281019290925250919050565b8183823760009101908152919050565b84815273ffffffffffffffffffffffffffffffffffffffff841660208201526080604082015260006117aa608083018561110b565b905082606083015295945050505050565b6000602082840312156117cd57600080fd5b815161061f81611642565b80820180821115610b6e57610b6e611549565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60408152600061182d604083018561110b565b828103602084015280845180835260208301915060208601925060005b8181101561186857835183526020938401939092019160010161184a565b50909695505050505050565b7f226368616c6c656e6765223a22000000000000000000000000000000000000008152600082516118ac81600d8501602087016110e7565b7f2200000000000000000000000000000000000000000000000000000000000000600d939091019283015250600e01919050565b600082516118f28184602087016110e7565b9190910192915050565b60006020828403121561190e57600080fd5b5051919050565b600083516119278184602088016110e7565b9190910191825250602001919050565b8082028115828204841417610b6e57610b6e611549565b81810381811115610b6e57610b6e611549565b60008161197057611970611549565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea264697066735822122097aaa178c3c29a673b77644c1f9be6f1a9cd0bcc86fc02be883734a7abf74cd364736f6c634300081b0033";

type EoaAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EoaAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EoaAccount__factory extends ContractFactory {
  constructor(...args: EoaAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EoaAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EoaAccount__factory {
    return super.connect(runner) as EoaAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EoaAccountInterface {
    return new Interface(_abi) as EoaAccountInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EoaAccount {
    return new Contract(address, _abi, runner) as unknown as EoaAccount;
  }
}
