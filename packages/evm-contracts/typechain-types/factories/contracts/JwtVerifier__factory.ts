/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  JwtVerifier,
  JwtVerifierInterface,
} from "../../contracts/JwtVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "proofVerifier_",
        type: "address",
      },
      {
        internalType: "contract PublicKeyRegistry",
        name: "publicKeyRegistry_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "accountId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authProviderId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofVerifier",
    outputs: [
      {
        internalType: "contract UltraVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicKeyRegistry",
    outputs: [
      {
        internalType: "contract PublicKeyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052348015600f57600080fd5b506040516101c53803806101c5833981016040819052602c916059565b6001600160a01b039182166080521660a052608e565b6001600160a01b0381168114605657600080fd5b50565b60008060408385031215606b57600080fd5b82516074816042565b60208401519092506083816042565b809150509250929050565b60805160a0516101146100b1600039600060b401526000606a01526101146000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c80636b124f5b14604b5780637fa417b314606657806386aeebf71460b05780639cfd7cff1460d6575b600080fd5b605360015481565b6040519081526020015b60405180910390f35b608c7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001605d565b608c7f000000000000000000000000000000000000000000000000000000000000000081565b60536000548156fea2646970667358221220ccc1cf6ff6175dab164534056949d46abc7d61e53ddeaa91a6f334d72fb6583964736f6c634300081b0033";

type JwtVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JwtVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JwtVerifier__factory extends ContractFactory {
  constructor(...args: JwtVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    proofVerifier_: AddressLike,
    publicKeyRegistry_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      proofVerifier_,
      publicKeyRegistry_,
      overrides || {}
    );
  }
  override deploy(
    proofVerifier_: AddressLike,
    publicKeyRegistry_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      proofVerifier_,
      publicKeyRegistry_,
      overrides || {}
    ) as Promise<
      JwtVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): JwtVerifier__factory {
    return super.connect(runner) as JwtVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JwtVerifierInterface {
    return new Interface(_abi) as JwtVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): JwtVerifier {
    return new Contract(address, _abi, runner) as unknown as JwtVerifier;
  }
}
